#
# sample iSCSI configuration file with 1 target
# 


# iSCSI Global Settings
global:
# change iscsi_offload_mode to TOE or ULP if desired
	# perform CHAP authentication first before ACL
        iscsi_auth_order=CHAP

	# Authentication configuration
	# Use DISC_AuthMethod=CHAP to force chap
	DISC_AuthMethod=None

	# oneway chap, Use DISC_Auth_CHAP_Policy=Mutual for mutual chap
	DISC_Auth_CHAP_Policy=Oneway

	# Auth_CHAP_ChallengeLength=16
	# CHAP id and secret should be enclosed in double quotes and
	# separated by :
	DISC_Auth_CHAP_Initiator="initiator_id1":"initiator_sec1"
	# Required for Mutual CHAP
	DISC_Auth_CHAP_Target="target_id1":"target_secret1"

# change the target vendor ID to "Chelsio"
#       iscsi_target_vendor_id=Chelsio


# Target Settings Block, Multiple such Target Blocks allowed.
# An iSCSI target called "iscsitarget1" is being served by
# the PortalGroupTag 1, with one block device and one ramdisk attached.
target:
	TargetName=iqn.2004-05.com.chelsio.target
	TargetAlias=chiscsit1
	MaxRecvDataSegmentLength=8192
	HeaderDigest=None,CRC32C
	DataDigest=None,CRC32C
	ImmediateData=Yes
	InitialR2T=Yes
	MaxOutstandingR2T=1
	MaxConnections=4
	
	# TargetDevice specific a block device/volume/ramdisk, served up
	# 	by this target.
	# There can be multiple of TargetDevice=xxx. The sequence of them 
	# 	specified determines the LUN, (i.e., the 1st one specified
	#	with TargetDevice has LUN 0, the 2nd one will be assigned
	#	LUN 1, ..., and so on and so forth)
	# flag "MEM" means ramdisk. The default ramdisk size is 16MB. To obtain 
	#	a ramdisk with a size other than 16MB, use "size=xxMB".
	# flag "NULLRW" means no actual read or write (i.e., if specified,
	# 	for read, random contents will be returned; for write,
	#	data will be dropped. It is useful to test for network
 	#	performance.
	# flag "SYNC" means for every write request, sync to the disk before
	#	send back the response
	# flag "DIF" means end to end (initiator to target backend) pi
	# 	protection is enabled.
	# flag "DIX" means target HBA to target backend pi protection is
	# 	enabled. All luns on a node should have same the value
	# 	(DIF or DIX) for protection.
	
	# lun 0: a disk device
	TargetDevice=/dev/sdb,SYNC
	
	# lun 1: a ramdisk, with default size of 16MB
	TargetDevice=ramdisk1,MEM
	
	# lun 2: a ramdisk, with a minimum size of 16MB, and no actual read or
	# 	write of data.
	TargetDevice=ramdisk2,MEM,NULLRW,size=16MB
	
	# Target Portal group information, adjust to your system specifc
	PortalGroup=1@192.168.1.1:3260
	PortalGroup=2@192.168.1.2:3260

	#
	#Access Control List settings
	#
	#	ACL_Enable=[Yes|No]
	#	ACL=[iname=<initiator name>;][;<sip=src ip>][;<dip=dst ip>]
	#	         [;<lun=ALL:R|RW>]
	#
	#ACL_Enable=Yes

	# initiator iqn.2004-08.com.chelsio.test1 is allowed r/w access on all
	# available luns
	#ACL=iname=iqn.2004-08.com.chelsio.test1
	#
	# any initiator from 192.164.1.100 is allowed r/w access on all luns
	#ACL=sip=192.164.1.100
	
	# any initiator connected via 192.0.2.50 is allowed read-only access
	# on all luns
	#ACL=dip=192.0.2.50;lun=ALL:R

	# initiator iqn.2004-08.com.chelsio.test3 from source 192.164.1.103 is
	# allowed to read only access to all available luns on 192.1.2.50
	#ACL=iname=iqn.2004-08.com.chelsio.test3;sip=192.164.1.103;dip=192.1.2.50;lun=ALL:R


	# Authentication configuration
	# Use AuthMethod=CHAP to force chap 
	AuthMethod=None
	# oneway chap, Use Auth_CHAP_Policy=Mutual for mutual chap.
	Auth_CHAP_Policy=Oneway
	#Auth_CHAP_ChallengeLength=16
	# CHAP id and secret should be enclosed in double quotes and
	# separated by :
	Auth_CHAP_Target="target_id1":"target_secret1"
	Auth_CHAP_Initiator="initiator_id1":"initiator_sec1"
	Auth_CHAP_Initiator="initiator_id2":"initiator_sec2"
